{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOBXNcZSCKy1k2jx0lvTFcq",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kaders26/google_colab/blob/main/Untitled5.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CDsV6Su5IdAk",
        "outputId": "1c21123f-244a-420f-cdd5-67ae4ece99f6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     A         B  C\n",
            "0  1.0  3.333333  1\n",
            "1  2.0  2.000000  2\n",
            "2  3.0  3.000000  3\n",
            "3  4.0  3.333333  4\n",
            "4  5.0  5.000000  5\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# eksik verileri sütun bazında ortalamayla doldurma\n",
        "veri = {\n",
        "    'A': [1, 2, None, 4, 5],\n",
        "    'B': [None, 2, 3, None, 5],\n",
        "    'C': [1, 2, 3, 4, 5]\n",
        "}\n",
        "df = pd.DataFrame(veri)\n",
        "\n",
        "# Eksik değerleri sütun bazında ortalamayla dolduran fonksiyon\n",
        "def eksik_doldur(df):\n",
        "    for sutun in df.columns:\n",
        "        if df[sutun].isnull().any():  # Eğer sütunda eksik veri varsa\n",
        "            ortalama = df[sutun].mean()  # Sütunun ortalamasını hesapla\n",
        "            df[sutun].fillna(ortalama, inplace=True)  # Eksik değerleri ortalamayla doldur\n",
        "\n",
        "# Fonksiyonu çağırarak eksik verileri doldur\n",
        "eksik_doldur(df)\n",
        "\n",
        "# Sonuçları görüntüle\n",
        "print(df)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# eksik değerleri sütun bazında mod (en sık tekrar eden değer) ile doldura\n",
        "veri = {\n",
        "    'A': [1, 2, None, 4, 5],\n",
        "    'B': [None, 2, 3, None, 5],\n",
        "    'C': [1, 2, 2, 4, 5]\n",
        "}\n",
        "df = pd.DataFrame(veri)\n",
        "\n",
        "# Eksik değerleri sütun bazında mod ile dolduran fonksiyon\n",
        "def eksik_doldur_mod(df):\n",
        "    for sutun in df.columns:\n",
        "        if df[sutun].isnull().any():  # Eğer sütunda eksik veri varsa\n",
        "            mod_deger = df[sutun].mode()[0]  # Sütunun modunu (en sık tekrar eden değeri) bul\n",
        "            df[sutun].fillna(mod_deger, inplace=True)  # Eksik değerleri moda göre doldur\n",
        "\n",
        "# Fonksiyonu çağırarak eksik verileri doldur\n",
        "eksik_doldur_mod(df)\n",
        "\n",
        "# Sonuçları görüntüle\n",
        "print(df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k35h2BHoI5sQ",
        "outputId": "f8dc97e6-0854-41ce-d33d-0a7150945eef"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     A    B  C\n",
            "0  1.0  2.0  1\n",
            "1  2.0  2.0  2\n",
            "2  1.0  3.0  2\n",
            "3  4.0  2.0  4\n",
            "4  5.0  5.0  5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# eksik verileri droplamak\n",
        "veri = {\n",
        "    'A': [1, 2, None, 4, 5],\n",
        "    'B': [None, 2, 3, None, 5],\n",
        "    'C': [1, None, 3, 4, 5]\n",
        "}\n",
        "df = pd.DataFrame(veri)\n",
        "\n",
        "# Eksik değerleri droplamak için dropna() yöntemini kullanalım\n",
        "df_droplandi = df.dropna()\n",
        "\n",
        "# Sonuçları görüntüle\n",
        "print(\"Eksik değerler droplandıktan sonra DataFrame:\")\n",
        "print(df_droplandi)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9mPBGXJhJkIe",
        "outputId": "62db17e2-feca-4842-8aec-9aad024fa3a5"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Eksik değerler droplandıktan sonra DataFrame:\n",
            "     A    B    C\n",
            "4  5.0  5.0  5.0\n"
          ]
        }
      ]
    }
  ]
}
